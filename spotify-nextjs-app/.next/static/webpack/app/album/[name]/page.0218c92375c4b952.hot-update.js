"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/album/[name]/page",{

/***/ "(app-pages-browser)/./src/utils/pipedApi.ts":
/*!*******************************!*\
  !*** ./src/utils/pipedApi.ts ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAudioStream: function() { return /* binding */ getAudioStream; },\n/* harmony export */   searchMusic: function() { return /* binding */ searchMusic; }\n/* harmony export */ });\n/* harmony import */ var _config_piped__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/config/piped */ \"(app-pages-browser)/./src/config/piped.ts\");\n\nfunction sanitizeQuery(query) {\n    // Remove special characters and unnecessary terms\n    return query.replace(/[^\\w\\s-]/g, \"\") // Remove special chars except hyphen\n    .replace(/\\s+/g, \" \") // Replace multiple spaces with single space\n    .trim();\n}\nasync function searchMusic(query) {\n    try {\n        var _data_items;\n        const cleanQuery = sanitizeQuery(query);\n        const searchQuery = \"\".concat(cleanQuery, \" audio\");\n        console.log(\"Searching for:\", searchQuery);\n        const response = await fetch(\"\".concat(_config_piped__WEBPACK_IMPORTED_MODULE_0__.PIPED_API_INSTANCE, \"/api/v1/search?q=\").concat(encodeURIComponent(searchQuery), \"&filter=music\"), {\n            headers: {\n                \"Accept\": \"application/json\",\n                \"Content-Type\": \"application/json\"\n            }\n        });\n        if (!response.ok) {\n            console.error(\"API Response not OK:\", response.status);\n            throw new Error(\"Failed to fetch from Piped API\");\n        }\n        const data = await response.json();\n        console.log(\"Raw search results:\", data);\n        if (!((_data_items = data.items) === null || _data_items === void 0 ? void 0 : _data_items.length)) {\n            console.log(\"No results found for query:\", searchQuery);\n            return null;\n        }\n        // Find the best match from the first 5 results\n        const bestMatch = data.items.slice(0, 5).find((item)=>{\n            const title = item.title.toLowerCase();\n            const terms = cleanQuery.toLowerCase().split(\" \");\n            return terms.every((term)=>title.includes(term));\n        }) || data.items[0];\n        const videoId = bestMatch.url.split(\"watch?v=\")[1];\n        console.log(\"Selected match:\", bestMatch.title);\n        return {\n            title: bestMatch.title,\n            url: \"\".concat(_config_piped__WEBPACK_IMPORTED_MODULE_0__.PIPED_INSTANCE, \"/watch?v=\").concat(videoId),\n            id: videoId,\n            duration: bestMatch.duration,\n            uploaded: bestMatch.uploaded,\n            uploaderName: bestMatch.uploaderName,\n            uploaderUrl: bestMatch.uploaderUrl,\n            thumbnail: bestMatch.thumbnail\n        };\n    } catch (error) {\n        console.error(\"Piped search error:\", error);\n        return null;\n    }\n}\nasync function getAudioStream(videoId) {\n    try {\n        var _data_audioStreams;\n        console.log(\"Fetching audio stream for:\", videoId);\n        const response = await fetch(\"\".concat(_config_piped__WEBPACK_IMPORTED_MODULE_0__.PIPED_API_INSTANCE, \"/streams/\").concat(videoId));\n        if (!response.ok) {\n            console.error(\"Stream fetch failed:\", response.status);\n            throw new Error(\"Failed to fetch stream data\");\n        }\n        const data = await response.json();\n        console.log(\"Stream data received:\", data);\n        // Get highest quality audio stream\n        const audioStream = (_data_audioStreams = data.audioStreams) === null || _data_audioStreams === void 0 ? void 0 : _data_audioStreams.sort((a, b)=>parseInt(b.bitrate) - parseInt(a.bitrate))[0];\n        if (!(audioStream === null || audioStream === void 0 ? void 0 : audioStream.url)) {\n            console.error(\"No audio stream found\");\n            return null;\n        }\n        return audioStream.url;\n    } catch (error) {\n        console.error(\"Error fetching audio stream:\", error);\n        return null;\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/utils/pipedApi.ts\n"));

/***/ })

});